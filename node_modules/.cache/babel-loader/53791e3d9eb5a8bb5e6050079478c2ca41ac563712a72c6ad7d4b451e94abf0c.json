{"ast":null,"code":"var _jsxFileName = \"C:\\\\SihApplication\\\\civic issue appp\\\\civic-issue-app\\\\src\\\\pages\\\\IssueDetail.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchIssueById } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IssueDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [issue, setIssue] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    const fetchIssue = async () => {\n      try {\n        const fetchedIssue = await fetchIssueById(id);\n        setIssue(fetchedIssue);\n      } catch (err) {\n        setError('Failed to fetch issue details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchIssue();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  if (!issue) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No issue found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Issue Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: issue.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), issue.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: issue.imageUrl,\n      alt: issue.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(IssueDetail, \"K8cY1AfdzIxhd3uOq7dHvGmNQLg=\", false, function () {\n  return [useParams];\n});\n_c = IssueDetail;\nexport default IssueDetail;\nvar _c;\n$RefreshReg$(_c, \"IssueDetail\");","map":{"version":3,"names":["React","useParams","fetchIssueById","jsxDEV","_jsxDEV","IssueDetail","_s","id","issue","setIssue","useState","loading","setLoading","error","setError","useEffect","fetchIssue","fetchedIssue","err","children","fileName","_jsxFileName","lineNumber","columnNumber","description","imageUrl","src","alt","_c","$RefreshReg$"],"sources":["C:/SihApplication/civic issue appp/civic-issue-app/src/pages/IssueDetail.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Issue } from '../types';\nimport { fetchIssueById } from '../services/api';\n\nconst IssueDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const [issue, setIssue] = React.useState<Issue | null>(null);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n\n  React.useEffect(() => {\n    const fetchIssue = async () => {\n      try {\n        const fetchedIssue = await fetchIssueById(id);\n        setIssue(fetchedIssue);\n      } catch (err) {\n        setError('Failed to fetch issue details.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchIssue();\n  }, [id]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  if (!issue) {\n    return <div>No issue found.</div>;\n  }\n\n  return (\n    <div>\n      <h1>Issue Detail</h1>\n      <p>{issue.description}</p>\n      {issue.imageUrl && <img src={issue.imageUrl} alt={issue.description} />}\n    </div>\n  );\n};\n\nexport default IssueDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAe,IAAI,CAAC;EAC5D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGd,KAAK,CAACU,QAAQ,CAAgB,IAAI,CAAC;EAE7DV,KAAK,CAACe,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,YAAY,GAAG,MAAMf,cAAc,CAACK,EAAE,CAAC;QAC7CE,QAAQ,CAACQ,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZJ,QAAQ,CAAC,gCAAgC,CAAC;MAC5C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAER,IAAII,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIV,KAAK,EAAE;IACT,oBAAOT,OAAA;MAAAe,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,IAAI,CAACf,KAAK,EAAE;IACV,oBAAOJ,OAAA;MAAAe,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAAe,QAAA,EAAIX,KAAK,CAACgB;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBf,KAAK,CAACiB,QAAQ,iBAAIrB,OAAA;MAAKsB,GAAG,EAAElB,KAAK,CAACiB,QAAS;MAACE,GAAG,EAAEnB,KAAK,CAACgB;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,WAAqB;EAAA,QACVJ,SAAS;AAAA;AAAA2B,EAAA,GADpBvB,WAAqB;AA0C3B,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}