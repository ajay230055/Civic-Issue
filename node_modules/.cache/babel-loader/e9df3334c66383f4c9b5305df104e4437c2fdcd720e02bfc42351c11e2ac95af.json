{"ast":null,"code":"var _jsxFileName = \"C:\\\\SihApplication\\\\civic issue appp\\\\civic-issue-app\\\\src\\\\pages\\\\Leaderboard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { fetchIssues } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  const [rows, setRows] = React.useState([]);\n  React.useEffect(() => {\n    fetchIssues().then(all => {\n      const map = new Map();\n      all.forEach(i => {\n        const p = i.rewardPoints || 0;\n        map.set(i.reporterName, (map.get(i.reporterName) || 0) + p);\n      });\n      const arr = Array.from(map.entries()).map(([user, points]) => ({\n        user,\n        points\n      })).sort((a, b) => b.points - a.points).slice(0, 20);\n      setRows(arr);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: rows.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: r.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-aqua\",\n            children: [r.points, \" pts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, r.user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","fetchIssues","jsxDEV","_jsxDEV","Leaderboard","_s","rows","setRows","useState","useEffect","then","all","map","Map","forEach","i","p","rewardPoints","set","reporterName","get","arr","Array","from","entries","user","points","sort","a","b","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","r","style","display","justifyContent","_c","$RefreshReg$"],"sources":["C:/SihApplication/civic issue appp/civic-issue-app/src/pages/Leaderboard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { fetchIssues } from '../services/api';\r\n\r\nconst Leaderboard: React.FC = () => {\r\n  const [rows, setRows] = React.useState<{ user: string; points: number }[]>([]);\r\n  React.useEffect(()=>{\r\n    fetchIssues().then((all)=>{\r\n      const map = new Map<string, number>();\r\n      all.forEach((i)=>{\r\n        const p = i.rewardPoints || 0;\r\n        map.set(i.reporterName, (map.get(i.reporterName) || 0) + p);\r\n      });\r\n      const arr = Array.from(map.entries()).map(([user, points])=>({ user, points }))\r\n        .sort((a,b)=> b.points - a.points).slice(0, 20);\r\n      setRows(arr);\r\n    });\r\n  },[]);\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Leaderboard</h1>\r\n      <ul className=\"list\">\r\n        {rows.map((r)=> (\r\n          <li key={r.user}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <span>{r.user}</span>\r\n              <span className=\"badge badge-aqua\">{r.points} pts</span>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAqC,EAAE,CAAC;EAC9ER,KAAK,CAACS,SAAS,CAAC,MAAI;IAClBR,WAAW,CAAC,CAAC,CAACS,IAAI,CAAEC,GAAG,IAAG;MACxB,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAiB,CAAC;MACrCF,GAAG,CAACG,OAAO,CAAEC,CAAC,IAAG;QACf,MAAMC,CAAC,GAAGD,CAAC,CAACE,YAAY,IAAI,CAAC;QAC7BL,GAAG,CAACM,GAAG,CAACH,CAAC,CAACI,YAAY,EAAE,CAACP,GAAG,CAACQ,GAAG,CAACL,CAAC,CAACI,YAAY,CAAC,IAAI,CAAC,IAAIH,CAAC,CAAC;MAC7D,CAAC,CAAC;MACF,MAAMK,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACX,GAAG,CAACY,OAAO,CAAC,CAAC,CAAC,CAACZ,GAAG,CAAC,CAAC,CAACa,IAAI,EAAEC,MAAM,CAAC,MAAI;QAAED,IAAI;QAAEC;MAAO,CAAC,CAAC,CAAC,CAC5EC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAIA,CAAC,CAACH,MAAM,GAAGE,CAAC,CAACF,MAAM,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACjDvB,OAAO,CAACc,GAAG,CAAC;IACd,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EACL,oBACElB,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7B,OAAA;MAAA6B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjC,OAAA;MAAI4B,SAAS,EAAC,MAAM;MAAAC,QAAA,EACjB1B,IAAI,CAACM,GAAG,CAAEyB,CAAC,iBACVlC,OAAA;QAAA6B,QAAA,eACE7B,OAAA;UAAKmC,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE;UAAgB,CAAE;UAAAR,QAAA,gBAC/D7B,OAAA;YAAA6B,QAAA,EAAOK,CAAC,CAACZ;UAAI;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrBjC,OAAA;YAAM4B,SAAS,EAAC,kBAAkB;YAAAC,QAAA,GAAEK,CAAC,CAACX,MAAM,EAAC,MAAI;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD;MAAC,GAJCC,CAAC,CAACZ,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA7BID,WAAqB;AAAAqC,EAAA,GAArBrC,WAAqB;AA+B3B,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}